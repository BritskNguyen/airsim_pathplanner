<launch>

    <!-- Launching the airsim server -->
	<arg name="host" default="localhost" />
	<arg name="airsim_output_mode" default="log" />
	<node name="airsim_node" pkg="airsim_ros_pkgs" type="airsim_node" output="$(arg airsim_output_mode)">
		<!-- ROS timer rates. Note that timer callback will be processed at maximum possible rate, upperbounded by the following ROS params -->
		<param name="is_vulkan" type="bool" value="false" /> 
		<param name="update_airsim_img_response_every_n_sec" type="double" value="0.2" /> 
		<param name="update_lidar_every_n_sec" type="double" value="0.1" />
		<param name="update_imu_n_sec" type="double" value="0.005" />
		<param name="update_airsim_control_every_n_sec" type="double" value="0.01" />
		<param name="host_ip" type="string" value="$(arg host)" />
	</node>

    <node pkg="tf" type="static_transform_publisher" name="enu_ned_static_tf"
          args="0.0 0.0 0.0 1.57079632679 0.0 3.14159265359 world_enu world_ned 10" />

	<arg name="drone_0_en" default="true" />
    <group if="$(arg drone_0_en)">


        <!-- swarm demo ctrl node -->
		<node name="swarm_demo_ctrl_0" pkg="swarm_demo" type="swarm_demo_ctrl_node" output="screen">
			<rosparam file="$(find swarm_demo)/config/swarm_demo_0_config.yaml" command="load"/>
		</node>


        <!-- ID of the  LOAM case -->
        <arg name="loam_id" default = "drone_0" />

        <!-- scan registration -->
        <rosparam param="/ascanRegistration_$(arg loam_id)/T_B_Bl">
            [ 1.0,  0.0,  0.0,  0.0,
              0.0,  1.0,  0.0,  0.0,
              0.0,  0.0,  1.0,  0.0,
              0.0,  0.0,  0.0,  0.0 ]
        </rosparam>
        <node pkg="aloam_velodyne" type="ascanRegistration" name="ascanRegistration_$(arg loam_id)" output="log" >
            <param name="pointcloud_topic" type="string"  value="/airsim_node/$(arg loam_id)/lidar/LidarCustom"/>
            <param name="scan_line"        type="int"     value="16"/>
            <param name="minimum_range"    type="double"  value="0.3"/>
            <param name="loam_id"          type="string"  value="$(arg loam_id)"/>
        </node>
        <!-- odmetry -->
        <node pkg="aloam_velodyne" type="alaserOdometry" name="alaserOdometry_$(arg loam_id)"    output="log" >
            <param name="mapping_skip_frame" type="int"     value="1" />
            <param name="loam_id"            type="string"  value="$(arg loam_id)"/>
        </node>
        <!-- mapping -->        
        <node pkg="aloam_velodyne" type="alaserMapping"     name="alaserMapping_$(arg loam_id)"  output="log" >
            <param name="mapping_line_resolution"  type="double" value="0.2" />
            <param name="mapping_plane_resolution" type="double" value="0.4" />
            <param name="loam_id"                  type="string"  value="$(arg loam_id)"/>
        </node>

        <!-- static transform for the loam estimate -->
        <node pkg="tf" type="static_transform_publisher" name="loam_init_tf"
              args="0.0 0.0 -1.0 0.0 0.0 0.0 world_ned lidar_init_drone_0 10" />

        <!-- visual odometry node -->
        <arg name="vio_output" default = "log" />
        <arg name="vio_en" default="true" />
        <group if="$(arg vio_en)">
            <node respawn="true" pkg="vins" type="vins_node" name="vins_estimator"
                  args="$(find vins)/../config/swarm_demo/airsim_mono_imu_config.yaml"
                  output="$(arg vio_output)"> </node>
        </group>

        <!-- static transform for the vio estimate -->
        <node pkg="tf" type="static_transform_publisher" name="vio_init_tf"
              args="0.3 0.0 -0.1 0.0 0.0 3.14159265359 world_ned vio_init 10" />

    </group>

	<!-- <node name="swarm_demo_ctrl_1" pkg="swarm_demo" type="swarm_demo_ctrl_node" output="screen">
		<rosparam file="$(find swarm_demo)/config/swarm_demo_1_config.yaml" command="load"/>
	</node> -->

	<!-- <node name="swarm_demo_ctrl_2" pkg="swarm_demo" type="swarm_demo_ctrl_node" output="screen">
		<rosparam file="$(find swarm_demo)/config/swarm_demo_2_config.yaml" command="load"/>
	</node> -->

    <!-- Launch the visualization -->
    <node name="rviz_visualisation" pkg="rviz" type="rviz" output="log"
          args="-d $(find swarm_demo)/launch/swarm_demo_config.rviz" />
    
</launch>